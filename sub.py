from datetime import datetime
from decimal import Decimal
from openpyxl import load_workbook
import pandas as pd
import requests
import config


# –ú–ï–¢–û–î–´ –ö–û–ù–í–ï–†–¢–ê–¶–ò–ò
def price(sender):  # —Ü–µ–Ω–∞
    return sender.units + sender.nano / 1e9


def no_timestamp(sender):  # –≤—Ä–µ–º—è
    # return datetime.fromtimestamp(sender)
    return f"{datetime.fromtimestamp(sender):%m.%d %H:%M}"


def nano_price(value, i):
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —á–∏—Å–ª–æ –≤ —Ñ–æ—Ä–º–∞—Ç Decimal
    decimal_value = Decimal(str(value))

    # –†–∞–∑–±–∏–≤–∞–µ–º —á–∏—Å–ª–æ –Ω–∞ —Ü–µ–ª—É—é –∏ –¥—Ä–æ–±–Ω—É—é —á–∞—Å—Ç–∏
    units = int(decimal_value)
    nano = int((decimal_value - Decimal(units)) * Decimal('1e9'))
    if i == 'u':
        return units
    if i == 'n':
        return nano


def check_match(row, arr):
    if row['time'] in arr:
        return 'üåü'
    else:
        return ''


def load_excel():
    url = config.excel_url
    response = requests.get(url)
    if response.status_code == 200:
        with open('test.xlsx', 'wb') as file:
            file.write(response.content)
            workbook = load_workbook('test.xlsx')
            print(f"—Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–≤–µ—Ä–æ—á–Ω–æ–µ —Å–ª–æ–≤–æ: {workbook['–õ–∏—Å—Ç1']['B1'].value}")
            return pd.read_excel('test.xlsx', skiprows=1)
    else:
        print('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞.')


